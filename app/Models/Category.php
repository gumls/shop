<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Category extends Model
{
    use HasFactory;

    protected $fillable = ["name","parent_id","is_directory","level","path"];

    protected $casts = [
        "is_directory" => "boolean",
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        //监听catrgory 创建时间 用于初始化path和level
        static::creating(function (Category $category){
            //如果创建的是根目录
            if(is_null($category->parent_id)){
                $category->level = 0;
                $category->path = "-";
            } else {
                $category->level = $category->parent->level + 1;
                $category->path = $category->parent->path.$category->parent_id."-";
            }
        });
    }

    //关联父级
    public function parent(){
        return $this->belongsTo(Category::class);
    }
    //关联子类
    public function children(){
        return $this->hasMany(Category::class,"parent_id");
    }
    //关联商品
    public function products(){
        return $this->hasMany(Product::class);
    }

    //定义访问器获取所有父类id
    public function getPathIdsAttribute(){
        return array_filter(explode("-",trim($this->path,"-")));
    }

    //获取所有父类
    public function getAncestorsAttribute(){
        return Category::query()
            ->whereIn("id",$this->path_ids)
            ->orderBy("level")
            ->get();
    }

    //以-分隔符 连接所有父类名称
    public function getFullNameAttribute(){
        return $this->ancestors
            ->pluck("name")
            ->push($this->name)
            ->implode(" - ");
    }
}
